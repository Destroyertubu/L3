cmake_minimum_required(VERSION 3.18 FATAL_ERROR)
project(L3 LANGUAGES CXX CUDA)

# ============================================================================
# Project Information
# ============================================================================
# L3: GPU-based Learned Compression for Time Series and Database Columns
# Version: 2.0
# Description: High-performance GPU-accelerated compression using learned models
# ============================================================================

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CUDA_STANDARD 17)
set(CMAKE_CUDA_STANDARD_REQUIRED ON)

# ============================================================================
# Build Options
# ============================================================================
option(BUILD_BENCHMARKS "Build benchmark executables" ON)
option(BUILD_EXAMPLES "Build example programs" ON)
option(BUILD_TOOLS "Build utility tools" ON)
option(ENABLE_TESTING "Enable unit tests" OFF)
option(USE_SINGLE_FILE "Build single-file optimized version" ON)
option(USE_MODULAR "Build modular separated version" ON)

# ============================================================================
# CUDA Configuration
# ============================================================================
if(NOT DEFINED CMAKE_CUDA_ARCHITECTURES)
  set(CMAKE_CUDA_ARCHITECTURES 75 80 86 89)
endif()

# CUDA flags for optimization
set(CMAKE_CUDA_FLAGS "${CMAKE_CUDA_FLAGS} --extended-lambda --expt-relaxed-constexpr")
set(CMAKE_CUDA_FLAGS_RELEASE "-O3 -DNDEBUG -use_fast_math")
set(CMAKE_CUDA_FLAGS_DEBUG "-g -G -O0")

# ============================================================================
# Include Directories
# ============================================================================
include_directories(
    ${CMAKE_SOURCE_DIR}/include/common
    ${CMAKE_SOURCE_DIR}/include/single_file
    ${CMAKE_SOURCE_DIR}/include/modular
    ${CMAKE_CUDA_TOOLKIT_INCLUDE_DIRECTORIES}
)

# ============================================================================
# Output Directories
# ============================================================================
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)

# ============================================================================
# Subdirectories
# ============================================================================
if(USE_SINGLE_FILE)
    add_subdirectory(lib/single_file)
endif()

if(USE_MODULAR)
    add_subdirectory(lib/modular)
endif()

if(BUILD_BENCHMARKS)
    add_subdirectory(benchmarks)
endif()

if(BUILD_EXAMPLES)
    add_subdirectory(examples)
endif()

if(BUILD_TOOLS)
    add_subdirectory(tools)
endif()

# ============================================================================
# Installation
# ============================================================================
install(DIRECTORY include/ DESTINATION include)
install(DIRECTORY ${CMAKE_BINARY_DIR}/lib/ DESTINATION lib)
install(DIRECTORY ${CMAKE_BINARY_DIR}/bin/ DESTINATION bin)

# ============================================================================
# Print Configuration Summary
# ============================================================================
message(STATUS "========================================")
message(STATUS "L3 Configuration Summary")
message(STATUS "========================================")
message(STATUS "Version: 2.0")
message(STATUS "Build type: ${CMAKE_BUILD_TYPE}")
message(STATUS "CUDA Architectures: ${CMAKE_CUDA_ARCHITECTURES}")
message(STATUS "Build Benchmarks: ${BUILD_BENCHMARKS}")
message(STATUS "Build Examples: ${BUILD_EXAMPLES}")
message(STATUS "Build Tools: ${BUILD_TOOLS}")
message(STATUS "Single-File Version: ${USE_SINGLE_FILE}")
message(STATUS "Modular Version: ${USE_MODULAR}")
message(STATUS "========================================")
