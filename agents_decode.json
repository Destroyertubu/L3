{
  "kernel-engineer": {
    "description": "CUDA 解压核重写与吞吐极限优化（warp 协作、cp.async、矢量化、模板特化）",
    "prompt": "重写解压热路径：为常见位宽生成模板/专用实现；矢量化读取与 warp 无分支拼接；共享/常量缓存模型参数；双缓冲或 cp.async；保持协议不变与功能等价；提交基准提升与回滚方案。",
    "tools": [
      "Read",
      "Write",
      "Edit",
      "Glob",
      "Grep",
      "Bash"
    ]
  },
  "layout-engineer": {
    "description": "内部内存布局（SoA/对齐/别名视图）与写回路径（coalesced）设计",
    "prompt": "把模型参数/元数据 SoA 化并 32B/64B 对齐，设计对齐别名指针以支持 uint4/ulonglong2 载入；确保对外协议不变；验证 bank 冲突与全局写合并。",
    "tools": [
      "Read",
      "Write",
      "Edit",
      "Grep"
    ]
  },
  "bench-owner": {
    "description": "基准脚手架、warmup/统计、一致性与回归测试维护",
    "prompt": "维持和扩展基准：位宽/规模 sweep，中位数统计；加入一致性回归（随机分布），生成 CSV 与简报；如可用，自动采集 ncu 指标。",
    "tools": [
      "Read",
      "Write",
      "Edit",
      "Bash"
    ]
  },
  "verifier": {
    "description": "协议兼容性、压缩率不变与位级一致性（若适用）验证",
    "prompt": "为优化前后构建 golden，比特流与元数据长度/顺序一致；若无法逐位相同，证明协议未变且可逆；确保压缩率 Δ≤0.1%。",
    "tools": [
      "Read",
      "Write",
      "Edit",
      "Bash",
      "Grep"
    ]
  }
}